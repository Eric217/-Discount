






在tableview的最顶部有一段空白区域

解决办法：1.如果tableview的style是plain模式，那么直接设置self.automaticallyAdjustsScrollViewInsets=NO 就可以

2. 如果是group模式，那么直接将高度设置为浮点数即可

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
return section ==0?0.1f:8.0f;// 0.1f:防止tableView顶部留白一块
}







table = UITableView(frame: CGRect(x: 0, y: 64, width: ScreenWidth, height: ScreenHeight - 64), style: .plain)
table.dataSource = self
table.delegate = self
table.register(UITableViewCell.self, forCellReuseIdentifier: Identifier.typechooseCellId)

view.addSubview(table)

func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

return 2
}
func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {

return 48
}
func tableView(_ tableView: UITableView, titleForFooterInSection section: Int) -> String? {

return " "
}
func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {

return 35
}

func numberOfSections(in tableView: UITableView) -> Int {
return 3

}
func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
let cell = UITableViewCell(style: .default, reuseIdentifier: "Cell")
cell.accessoryType = .detailButton
return cell
}

func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {

}



let lay = UICollectionViewFlowLayout()
collection = UICollectionView(frame: myRect(0, 84, ScreenWidth, ScreenHeight-84), collectionViewLayout: lay)
collection.delegate = self
collection.dataSource = self
collection.register(ELItemViewCell.self, forCellWithReuseIdentifier: Identifier.resultofSearchCellId)
view.addSubview(collection)

/* 长按出来复制
func collectionView(_ collectionView: UICollectionView, performAction action: Selector, forItemAt indexPath: IndexPath, withSender sender: Any?) {
<#code#>
}
func collectionView(_ collectionView: UICollectionView, canPerformAction action: Selector, forItemAt indexPath: IndexPath, withSender sender: Any?) -> Bool {
<#code#>
}

改变layout时的转场
func collectionView(_ collectionView: UICollectionView, transitionLayoutForOldLayout fromLayout: UICollectionViewLayout, newLayout toLayout: UICollectionViewLayout) -> UICollectionViewTransitionLayout {
<#code#>
}

view的move问题
func collectionView(_ collectionView: UICollectionView, canMoveItemAt indexPath: IndexPath) -> Bool {
return true
}

func collectionView(_ collectionView: UICollectionView, moveItemAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {

}
func collectionView(_ collectionView: UICollectionView, targetIndexPathForMoveFromItemAt originalIndexPath: IndexPath, toProposedIndexPath proposedIndexPath: IndexPath) -> IndexPath {
<#code#>
}

//改变layout时有机会做 调offset之类的事：
func collectionView(_ collectionView: UICollectionView, targetContentOffsetForProposedContentOffset proposedContentOffset: CGPoint) -> CGPoint {
<#code#>
}

func collectionView(_ collectionView:UICollectionView, cellForItemAt indexPath:IndexPath) -> UICollectionViewCell {

return cell

}


func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath:IndexPath) {

}



func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {


return CGSize(width: ScreenWidth, height: itemHeight)
}





//------------------
func numberOfSections(in collectionView: UICollectionView) -> Int {
return 1
}

func collectionView(_ collectionView:UICollectionView, numberOfItemsInSection section:Int) -> Int {
if collectionView.tag == 299 {
return 8
}
return person == nil ? 5 : person.cards!.count+3
}


*/













